Difference between HTTP/1.1 andÂ HTTP/2
The HTTP/1.1 is the upgraded version of the earlier version HTTP/1.0. The HTTP/1.0 is a grounded protocal and simple way for computers to understand each other. But people want faster interaction. So, the HTTP/1.1 is introduced and this version made things faster by allowing the computers to reuse the information.
The reuse of information is done by using the cache and cookies to restore the information locally, so there is no interrupt in response and it make this version faster.
This version loads resources one after the other, so if one resource cannot be loaded, it blocks all the other resources behind it. This creates a discomfort among the users, In Remedy the upgraded version of HTTP/1.1 is introduced which is HTTP/2. HTTP/2 is able to send multiple streams of data at once so that no one resource blocks any other resource. It can send and receive more information at the same time.
HTTP/2 consume less bandwidth, are more efficiently parsed and are less error-prone than the textual protocols used by HTTP/1.1. Additionally, they can better handle elements such as whitespace, capitalization and line endings. HTTP/2 is a binary based protocol and HTTP/1.1 is a text based protocol.

Objects and its internal representation in Javascript
Objects, in JavaScript, is it's most important data-type and forms the building blocks for modern JavaScript. These objects are quite different from JavaScript's primitive data-types(Number, String, Boolean, null, undefined and symbol) in the sense that while these primitive data-types all store a single value each (depending on their types).
Objects are more complex and each object may contain any combination of these primitive data-types as well as reference data-types.
An object, is a reference data type. Variables that are assigned a reference value are given a reference or a pointer to that value. That reference or pointer points to the location in memory where the object is stored. The variables don't actually store the value.
Loosely speaking, objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, in the form of "key: value" pairs. These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.
For Eg. If your object is a student, it will have properties like name, age, address, id, etc and methods like updateAddress, updateNam, etc.